{"version":3,"sources":["logo.svg","TopLikes.jsx","App.js","reportWebVitals.js","index.js"],"names":["TopLikes","useState","data","setData","page","setPage","pageNumber","fetchTop","a","fetch","method","headers","then","r","json","response","console","log","useEffect","style","margin","map","item","index","likes","moment","date","fromNow","userName","onClick","id","Audio","_id","play","process","url","App","personTalking","setPersonTalking","lastPlayed","setLastPlayed","didLike","setDidLike","getSound","audio","onended","likeSound","className","padding","backgroundColor","borderRadius","alignItems","justifyContent","color","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,I,oCC6EAA,MArEf,WAAqB,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,OAEQF,mBAAS,GAFjB,mBAETG,EAFS,KAEHC,EAFG,KAIZC,EAAaF,EAAO,EAElBG,EAAQ,uCAAG,4BAAAC,EAAA,sEAEIC,MAAM,GAAD,OAV7B,oDAU6B,qBAAoBL,GAAQ,CACvDM,OAAQ,MACRC,QAAS,CACR,eAAe,sBAEdC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAPI,OAEbC,EAFa,OAQbC,QAAQC,IAAIF,GAClBZ,EAAQY,GATW,2CAAH,qDAgBd,OAHAG,oBAAUX,EAAU,IACpBW,oBAAUX,EAAU,CAACH,IAGjB,sBAAKe,MAAO,CACRC,OAAQ,IADZ,UAGI,2DAC4Bd,KAE5B,gCACKJ,EAAKmB,KAAI,SAACC,EAAMC,GAAP,OACN,gCACA,+BACI,6BAAKD,EAAKE,MAAQ,EAAb,UAAoBF,EAAKE,MAAzB,oBAA4CF,EAAKE,MAAjD,WACL,6BAAKC,IAAOH,EAAKI,MAAMC,YACvB,6BAAKL,EAAKM,WACV,oBAAIC,QAAS,WACT,IAlCHC,EAkCiB,IAAIC,OAlCrBD,EAkCuCR,EAAKU,IAlC7C,+DAAgEF,EAAhE,UAmCUG,QAFV,0BAJKX,EAAKU,YAYtB,qBACIH,QAAS,WACLxB,EAAQD,GAAQ,EAAIA,EAAQA,EAAO,IAEvCe,MAAO,CACCC,OAAQ,IALpB,uBAUA,qBACIS,QAAS,WACLxB,EAAQD,EAAO,IAEnBe,MAAO,CACCC,OAAQ,IALpB,2BCxDZJ,QAAQC,IAAIiB,cAEZ,IAAMC,EAEL,oDAEDnB,QAAQC,IAAIkB,GAyFGC,MAvFf,WAAgB,IAAD,EAE4BnC,mBAAS,MAFrC,mBAEPoC,EAFO,KAEQC,EAFR,OAGsBrC,mBAAS,MAH/B,mBAGPsC,EAHO,KAGKC,EAHL,OAIgBvC,oBAAS,GAJzB,mBAIPwC,EAJO,KAIEC,EAJF,KAORC,EAAQ,uCAAG,kCAAAnC,EAAA,sEAESC,MAAM,GAAD,OAAI0B,EAAJ,WAAkB,CAC/CzB,OAAQ,MACRC,QAAS,CACR,eAAe,sBAEdC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAPC,mCAETC,EAFS,KAQhBuB,EAAiBvB,EAASa,WACpBgB,EAAQ,IAAIb,OAVED,EAUgBf,EAASiB,IAV1B,+DAAgEF,EAAhE,WAWbG,OACNS,GAAW,GACXE,EAAMC,QAAU,WACfP,EAAiB,MACjBE,EAAczB,IAEfC,QAAQC,IAAIF,GAhBI,kCADG,IAACe,IACJ,OAAH,qDAkBRgB,EAAS,uCAAG,4BAAAtC,EAAA,sEACMC,MAAM,GAAD,OAAI0B,EAAJ,iBAAgBI,EAAWP,KAAO,CAC7DtB,OAAQ,MACRC,QAAS,CACR,eAAe,sBAJA,OACXI,EADW,OAOjBC,QAAQC,IAAIF,GACZ2B,GAAW,GARM,2CAAH,qDAWf,OACC,qBAAKK,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UAEC,4BACEV,GACA,8CACYA,OAId,sBACCU,UAAU,WACVlB,QAASc,EAFV,+BAMCJ,GACA,gCACC,sBAAKpB,MAAO,CACX6B,QAAQ,IADT,UAGEP,GAAWF,EAAWf,OAAS,GAAK,EAAIe,EAAWf,OAAS,EAH9D,aAKEiB,GACD,qBACCZ,QAASiB,EACT3B,MAAO,CACN8B,gBAAiB,QACjB7B,OAAQ,GACR4B,QAAS,EACTE,aAAc,EACdC,WAAY,SACZC,eAAgB,UARlB,SAWC,cAAC,IAAD,CACCC,MAAO,QACPC,KAAM,UAMX,cAAC,EAAD,UClFYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.843e941f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react'\nimport moment from 'moment'\n\n\nconst url = process.env.NODE_ENV == 'development' ? \n\t\"http://localhost:2002\" : \n\t\"https://discord-clips-api-5vhmvf6quq-uk.a.run.app\"\n\nfunction TopLikes() {\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(0)\n    const getSoundUrl = (id) => `https://storage.googleapis.com/amplify-discord-clips/${id}.ogg`\n    let pageNumber = page + 1\n\n    const fetchTop = async () => {\n\t\t\n\t\tconst response = await fetch(`${url}/toplikes/${page}`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type':'application/json'\n\t\t\t},\n\t\t}).then(r => r.json());\n        console.log(response);\n\t\tsetData(response)\n\t\t\n\t}\n\n    useEffect(fetchTop, [])\n    useEffect(fetchTop, [page])\n\n    return (\n        <div style={{\n            margin: 50\n        }}>\n            <span>\n                MOST LIKED SOUNDS PAGE {pageNumber}\n            </span>\n            <table>\n                {data.map((item, index) => (\n                    <tbody>\n                    <tr key={item._id}>\n                        <td>{item.likes > 1 ? `${item.likes} likes` : `${item.likes} like`}</td>\n                        <td>{moment(item.date).fromNow()}</td>\n                        <td>{item.userName}</td>\n                        <td onClick={() => {\n                            const audio = new Audio(getSoundUrl(item._id));\n                            audio.play();\n                        }}>Play Sound</td>\n                    </tr>\n                    </tbody>\n                ))}\n            </table>\n            <div \n                onClick={() => {\n                    setPage(page <= 0 ? page : (page - 1))\n                }}\n                style={{\n                        margin: 30\n                }}\n            >\n                Page Back\n            </div>\n            <div \n                onClick={() => {\n                    setPage(page + 1)\n                }}\n                style={{\n                        margin: 30,\n                }}\n            >\n                Next Page\n            </div>\n        </div>\n    )\n}\n\n\nexport default TopLikes;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { ThumbsUp } from 'react-feather'\nimport TopLikes from './TopLikes';\n\nconsole.log(process.env.NODE_ENV)\n\nconst url = process.env.NODE_ENV == 'development' ? \n\t\"http://localhost:2002\" : \n\t\"https://discord-clips-api-5vhmvf6quq-uk.a.run.app\"\n\nconsole.log(url)\n\nfunction App() {\n\t\n\tconst [personTalking, setPersonTalking] = useState(null);\n\tconst [lastPlayed, setLastPlayed] = useState(null);\n\tconst [didLike, setDidLike] = useState(false)\n\n\tconst getSoundUrl = (id) => `https://storage.googleapis.com/amplify-discord-clips/${id}.ogg`\n\tconst getSound = async () => {\n\t\t\n\t\tconst [response] = await fetch(`${url}/random`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type':'application/json'\n\t\t\t},\n\t\t}).then(r => r.json());\n\t\tsetPersonTalking(response.userName);\n\t\tconst audio = new Audio(getSoundUrl(response._id));\n\t\taudio.play();\n\t\tsetDidLike(false)\n\t\taudio.onended = () => {\n\t\t\tsetPersonTalking(null)\n\t\t\tsetLastPlayed(response)\n\t\t}\n\t\tconsole.log(response);\n\t}\n\tconst likeSound = async () => {\n\t\tconst response = await fetch(`${url}/like/${lastPlayed._id}`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type':'application/json'\n\t\t\t}\n\t\t});\n\t\tconsole.log(response)\n\t\tsetDidLike(true)\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t\t\n\t\t\t<p>\n\t\t\t\t{personTalking && (\n\t\t\t\t\t<span>\n\t\t\t\t\t\tSpeaking: {personTalking}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t</p>\n\t\t\t<span\n\t\t\t\tclassName=\"App-link\"\n\t\t\t\tonClick={getSound}\n\t\t\t>\n\t\t\t\tPlay Random Sound\n\t\t\t</span>\n\t\t\t{lastPlayed && (\n\t\t\t\t<div>\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tpadding:10\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{didLike ? (lastPlayed.likes || 0) + 1 : lastPlayed.likes || 0} likes\n\t\t\t\t\t</div>\n\t\t\t\t\t{!didLike && (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tonClick={likeSound}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t\t\t\tmargin: 10,\n\t\t\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t\t\t\tborderRadius: 8,\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\tjustifyContent: \"center\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ThumbsUp \n\t\t\t\t\t\t\t\tcolor={\"black\"}\n\t\t\t\t\t\t\t\tsize={50}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<TopLikes />\n\t\t</header>\n\t\t\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}