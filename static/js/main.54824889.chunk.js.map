{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","personTalking","setPersonTalking","getSound","a","fetch","method","headers","then","r","json","response","userName","audio","Audio","id","_id","play","onended","console","log","className","src","logo","alt","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAe,MAA0B,iC,eC8C1BA,MA1Cf,WAAgB,IAAD,EAE4BC,mBAAS,MAFrC,mBAEPC,EAFO,KAEQC,EAFR,KAKRC,EAAQ,uCAAG,kCAAAC,EAAA,sEAESC,MAAM,2DAA4D,CAC1FC,OAAQ,MACRC,QAAS,CACR,eAAe,sBAEdC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAPC,mCAETC,EAFS,KAQhBT,EAAiBS,EAASC,WACpBC,EAAQ,IAAIC,OAVEC,EAUgBJ,EAASK,IAV1B,+DAAgED,EAAhE,WAWbE,OACNJ,EAAMK,QAAU,kBAAMhB,EAAiB,OACvCiB,QAAQC,IAAIT,GAZI,kCADG,IAACI,IACJ,OAAH,qDAed,OACC,qBAAKM,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACC,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,4BACEvB,GACA,8CACYA,OAId,sBACCoB,UAAU,WACVI,QAAStB,EAFV,8BCvBYuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.54824889.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\t\n\tconst [personTalking, setPersonTalking] = useState(null);\n\n\tconst getSoundUrl = (id) => `https://storage.googleapis.com/amplify-discord-clips/${id}.ogg`\n\tconst getSound = async () => {\n\t\t//const [response] = await fetch(\"http://localhost:2002/random\", {\n\t\tconst [response] = await fetch(\"https://discord-clips-api-5vhmvf6quq-uk.a.run.app/random\", {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type':'application/json'\n\t\t\t},\n\t\t}).then(r => r.json());\n\t\tsetPersonTalking(response.userName);\n\t\tconst audio = new Audio(getSoundUrl(response._id));\n\t\taudio.play();\n\t\taudio.onended = () => setPersonTalking(null);\n\t\tconsole.log(response);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t<p>\n\t\t\t\t{personTalking && (\n\t\t\t\t\t<span>\n\t\t\t\t\t\tSpeaking: {personTalking}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t</p>\n\t\t\t<span\n\t\t\t\tclassName=\"App-link\"\n\t\t\t\tonClick={getSound}\n\t\t\t>\n\t\t\t\tPlay Sound\n\t\t\t</span>\n\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}